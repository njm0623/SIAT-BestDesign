<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="designer">
	<insert id="designerInsert" parameterType="user">
		<![CDATA[
			INSERT INTO
			DESIGNER(designerId)
			VALUES(#{userId})
			]]>
	</insert>
	<select id="designerLogin" parameterType="design" resultType="design">
		<![CDATA[
			SELECT *
			FROM DESIGNER
			WHERE designerId = #{designerId}
		]]>
	</select>
	<select id="designerPerDrawing" parameterType="design" resultType="sale">
		<![CDATA[
			select salenum, saletitle, saleimage
			from(select * from saleboard order by dbms_random.random)
			where rownum <=4 and designerid = #{designerId}
		]]>
	</select>
	<update id="designerUpdate" parameterType="design">
			UPDATE designer
			set designerProfile = #{designerProfile}, designerNickName =#{designerNickName}
			<if test="designerImage != ''">, designerImage = #{designerImage}</if>
			WHERE designerId = #{designerId}
	</update>
	<select id="getAllDesigner" parameterType="designerListPaging" resultType="design">
		SELECT * FROM (
			SELECT ROWNUM RN, D.* FROM (
				<choose>
					<when test="cart.equals('on')">
						select d.* from designer d, designercart c
						where d.designerid = c.designerid and c.userid = #{userId}
					</when>
					<otherwise>
						SELECT * FROM DESIGNER
						<choose>
							<when test="search != null">
								<choose>
									<when test="orderby.equals('reverseName')">WHERE DESIGNERID LIKE '%${search}%' OR DESIGNERNICKNAME LIKE '%${search}%' ORDER BY DESIGNERID DESC</when>
									<otherwise>WHERE DESIGNERID LIKE '%${search}%' OR DESIGNERNICKNAME LIKE '%${search}%' ORDER BY DESIGNERID ASC</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when test="orderby.equals('reverseName')">ORDER BY DESIGNERID DESC</when>
									<otherwise>ORDER BY DESIGNERID ASC</otherwise>
								</choose>
							</otherwise>		
						</choose>
					</otherwise>
				</choose>
			) D
		) WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getTotalCount" parameterType="designerListPaging" resultType="int">
		<choose>
			<when test="cart.equals('on')">
				select count(*) from designer d, designercart c
				where d.designerid = c.designerid and c.userid = #{userId}
			</when>
			<otherwise>
				SELECT COUNT(*) FROM DESIGNER
				<choose>
					<when test="search != null">
						<choose>
							<when test="orderby.equals('reverseName')">WHERE DESIGNERID LIKE '%${search}%' OR DESIGNERNICKNAME LIKE '%${search}%' ORDER BY DESIGNERID DESC</when>
							<otherwise>WHERE DESIGNERID LIKE '%${search}%' OR DESIGNERNICKNAME LIKE '%${search}%' ORDER BY DESIGNERID ASC</otherwise>
						</choose>
					</when>
					<otherwise>
						<choose>
							<when test="orderby.equals('reverseName')">ORDER BY DESIGNERID DESC</when>
							<otherwise>ORDER BY DESIGNERID ASC</otherwise>
						</choose>
					</otherwise>		
				</choose>
			</otherwise>
		</choose>
	</select>
	
	
	<select id="checkCart" parameterType="hash" resultType="dcart">
		<![CDATA[
			SELECT *
			from designercart
			where userId = #{userId} and designerId = #{designerId}
		]]>
	</select>
	<insert id="insertCart" parameterType="hash">
		<![CDATA[
			INSERT INTO designerCart
			values(seq_designerCart.nextval, #{userId}, #{designerId})
		]]>
	</insert>
	<delete id="deleteCart" parameterType="dcart">
		<![CDATA[
			DELETE FROM designerCart
			where cartNum = #{cartNum}
		]]>
	</delete>
</mapper>